// variabel untuk menampung data
const data = [];
 function submitData(event){
  event.preventDefault();
  
  let title = document.getElementById('pName').value
  let sDate = document.getElementById('s-date').value
  let eDate = document.getElementById('e-date').value
  let content = document.getElementById('description').value
  let image = document.getElementById('attachFile').files 
  
  
  const tech4 = `<img src="/images/nextjs.png" alt="nextjs">`;
  const tech2 = `<img src="/images/react.png" alt="react">`;
  const tech3 = `<img src="/images/ts.png" alt="typescript">`;
  const tech1 = `<img src="/images/nodejs.png" alt="nodejs">`;
  
  NodeJS = document.getElementById('tech1').checked ? tech1 : '';
  ReactJs = document.getElementById('tech2').checked ? tech2 : '';
  Typescript = document.getElementById('tech3').checked ?  tech3 : '';
  NextJs = document.getElementById('tech4').checked ? tech4 : '';




  // validation
  if (title === ''){
  alert('isi nama project ');
return;
 }
 else if (sDate === ''){
  alert('isi start date');
 return;
}
else if (eDate === '') {
  alert ('isi end date');
return;
}
else if (content === ''){
alert ('isi description');
return;
 }
 else if (image.length === 0){
  alert ('upload picture');
return;
}

// untuk membuat image menjadi url sementara [0] untuk menangkap array
image = URL.createObjectURL(image[0])


const obj = {
  title,
  sDate,
  eDate,
  content,
  image,
  NodeJS,
  ReactJs,
  Typescript,
  NextJs,
  postAt: new Date(),
  author: 'Ahmad',
}

data.push(obj);
console.log(data);

renderProject();
  
}

function renderProject() {
  document.getElementById('project-list').innerHTML = '';

  for (let x = 0; x < data.length; x++){
    console.log(data[x]);

    document.getElementById('project-list').innerHTML +=`
    <div class="project-list" id="project-list">
    <div class="project-container" id="project-item">
        <a href="/projectd-detail.html">
        <div class="project-image">
            <img src="${data[x].image}">
        </div>
        <p style="font-weight: bold;"> ${data[x].title} </p>
        <p style="font-size: 15px; color: black ;">${data[x].postAt} | ${data[x].author} </p>

        <div class="project-content">
            <p> ${data[x].content}
            </p>
        </div>

        <div class="project-icon">                    
            <ul>
               ${data[x].NextJs}
                ${data[x].ReactJs}
                ${data[x].Typescript}
                ${data[x].NodeJS}
            </ul>
        </div>
        
      </a>
            </ul>
        </div>
        <div class="project-button">
            <button class="edit" type="button">Edit</button>
            <button class="delete" type="button">Delete</button>
        </div>
        </a>
    </div>
  </div>`
  }
}


async dan ajax
// penggabungan promise dan juga ajax
const janji = new Promise((resolve, reject) => {
  const xhr = new XMLHttpRequest()
  xhr.open('GET', 'https://api.npoint.io/8cb224c89fa998fae96a', true)
  xhr.onload = () => {
      if (xhr.status === 200) {
          // console.log("berhasil", xhr.response)
          resolve(JSON.parse(xhr.response))
      } else {
          reject("Internal server error!")
          // console.log("gagal", xhr.response)
      }
  }

  xhr.onerror = () => { // kesalahan kita sendiri / client
      reject("Network error!")
      // console.log("Network error! Please check your internet connection")
  }
  xhr.send()
})

function html(item) {
  return `<div class="testimonial">
  <img src="${item.image}" class="profile-testimonial" />
  <p class="quote">"${item.content}"</p>
  <p class="author">- ${item.author}</p>
  <p class="author">${item.rating} <i class="fa-solid fa-star"></i></p>
</div>`
}

async function allTestimonials() {
  let testimonialHTML = ``
  const testimonialData = await janji
  console.log(testimonialData)

  testimonialData.forEach((item) => {
      testimonialHTML += html(item)
  })

  document.getElementById("testimonials").innerHTML = testimonialHTML
}

allTestimonials()

async function filterTestimonials(rating) {
  let testimonialHTML = ``
  const testimonialData = await janji
  const testimonialFiltered = testimonialData.filter((item) => {
      return item.rating === rating
  })

  if (testimonialFiltered.length === 0) {
      testimonialHTML = `<h3> Data not found! </h3>`
  } else {
      testimonialFiltered.forEach((item) => {
          testimonialHTML += html(item)
      })
  }

  document.getElementById("testimonials").innerHTML = testimonialHTML
} 